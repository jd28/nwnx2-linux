#ifndef _CNWSCREATURE_H_
#define _CNWSCREATURE_H_
#include "nwndef.h"
#include "CNWSObject.h"
#include "Vector.h"
#include "CExoString.h"
#include "CResRef.h"
#include "CExoArrayList.h"
#include "CNWSInventory.h"
#include "nwnstructs.h"

class CNWSCreature : public CNWSObject
{
public:
    unsigned long AIActionAnimalEmpathy(CNWSObjectActionNode *);
    unsigned long AIActionAppear(CNWSObjectActionNode *);
    unsigned long AIActionAreaWait(CNWSObjectActionNode *);
    unsigned long AIActionAttackObject(CNWSObjectActionNode *);
    unsigned long AIActionBarter(CNWSObjectActionNode *);
    unsigned long AIActionCastSpell(CNWSObjectActionNode *);
    unsigned long AIActionChangeFacingObject(CNWSObjectActionNode *);
    unsigned long AIActionChangeFacingPoint(CNWSObjectActionNode *);
    unsigned long AIActionCheckForceFollowObject(CNWSObjectActionNode *);
    unsigned long AIActionCheckInterAreaPathfinding(CNWSObjectActionNode *);
    unsigned long AIActionCheckMoveAwayFromLocation(CNWSObjectActionNode *);
    unsigned long AIActionCheckMoveAwayFromObject(CNWSObjectActionNode *);
    unsigned long AIActionCheckMoveToObjectRadius(CNWSObjectActionNode *);
    unsigned long AIActionCheckMoveToObject(CNWSObjectActionNode *);
    unsigned long AIActionCheckMoveToPointRadius(CNWSObjectActionNode *);
    unsigned long AIActionCheckMoveToPoint(CNWSObjectActionNode *);
    unsigned long AIActionCounterSpell(CNWSObjectActionNode *);
    unsigned long AIActionDisappear(CNWSObjectActionNode *);
    unsigned long AIActionDisarmTrap(CNWSObjectActionNode *);
    unsigned long AIActionDrive(CNWSObjectActionNode *);
    unsigned long AIActionDropItem(CNWSObjectActionNode *);
    unsigned long AIActionEncounterCreatureDestroySelf();
    unsigned long AIActionEquipItem(CNWSObjectActionNode *);
    unsigned long AIActionExamineTrap(CNWSObjectActionNode *);
    unsigned long AIActionExamine(CNWSObjectActionNode *);
    unsigned long AIActionFlagTrap(CNWSObjectActionNode *);
    unsigned long AIActionForceFollowObject(CNWSObjectActionNode *);
    unsigned long AIActionHeal(CNWSObjectActionNode *);
    unsigned long AIActionItemCastSpell(CNWSObjectActionNode *);
    unsigned long AIActionJumpToObject(CNWSObjectActionNode *);
    unsigned long AIActionJumpToPoint(CNWSObjectActionNode *);
    unsigned long AIActionMoveToPoint(CNWSObjectActionNode *);
    unsigned long AIActionOrientCamera(CNWSObjectActionNode *);
    unsigned long AIActionPickPocket(CNWSObjectActionNode *);
    unsigned long AIActionPickUpItem(CNWSObjectActionNode *);
    unsigned long AIActionRandomWalk(CNWSObjectActionNode *);
    unsigned long AIActionRecoverTrap(CNWSObjectActionNode *);
    unsigned long AIActionRepositoryMove(CNWSObjectActionNode *);
    unsigned long AIActionRest(CNWSObjectActionNode *);
    unsigned long AIActionSetTrap(CNWSObjectActionNode *);
    unsigned long AIActionSit(CNWSObjectActionNode *);
    unsigned long AIActionTaunt(CNWSObjectActionNode *);
    unsigned long AIActionUnequipItem(CNWSObjectActionNode *);
    unsigned long AIActionWaitForEndOfRound(CNWSObjectActionNode *);
    void AIUpdate();
    int AcquireItem(CNWSItem **, unsigned long, unsigned long, unsigned char, unsigned char, int, int);
    void ActionManager(unsigned long);
    void ActivityManager(unsigned long);
    int AddAnimalEmpathyAction(unsigned long);
    int AddAppearActions(int);
    int AddAreaOfEffect(unsigned long);
    void AddAssociate(unsigned long, unsigned short);
    int AddAttackActions(unsigned long, int, int, int);
    int AddCastSpellActions(unsigned long, int, int, int, int, Vector, unsigned long, int, int, int, unsigned char, int, int, int, unsigned char);
    int AddCounterSpellActions(unsigned long);
    int AddDisappearActions(int, int);
    int AddDriveAction(unsigned short, Vector const &, int, int, int, int);
    int AddDropItemActions(unsigned long, Vector, int);
    int AddEquipItemActions(CNWSItem *, unsigned long, int, int, unsigned long);
    void AddGold(int, int);
    int AddHealActions(unsigned long, unsigned long, int);
    int AddItemCastSpellActions(unsigned long, int, int, Vector, unsigned long, int);
    int AddMoveToPointActionToFront(unsigned short, Vector, unsigned long, unsigned long, int, float, float, int, int, int, int, int, int);
    int AddMoveToPointAction(unsigned short, Vector, unsigned long, unsigned long, int, float, float, int, int, int, int, int, int);
    int AddPathfindingWaitActionToFront(unsigned short);
    int AddPickPocketActions(unsigned long);
    int AddPickUpItemActions(unsigned long, unsigned long, unsigned char, unsigned char);
    int AddRepositoryMoveActions(CNWSItem *, unsigned long, unsigned char, unsigned char);
    int AddSitActions(unsigned long);
    int AddTauntActions(unsigned long);
    void AddToArea(CNWSArea *, float, float, float, int);
    void AddToAssociateList(unsigned long);
    void AddToInvitationsIgnored(unsigned long);
    void AddToInvitationsOffered(unsigned long);
    void AddToPVPList(unsigned long);
    void AddToPersonalReputationList(unsigned long, int, int, float);
    void AddToVisibleList(unsigned long, int, int, unsigned char, int);
    int AddTrapActions(unsigned long, unsigned char, unsigned long, Vector, unsigned long);
    int AddUnequipActions(CNWSItem *, unsigned long, unsigned char, unsigned char, int, int, unsigned long);
    int AddUseTalentAtLocationActions(int, int, Vector, unsigned char, unsigned long, int, unsigned char, unsigned char);
    int AddUseTalentOnObjectActions(int, int, unsigned long, unsigned char, unsigned long, int, unsigned char, unsigned char);
    void AdjustReputation(int, int);
    void ApplyDeathExperience();
    int ApplyDiseasePayload(CGameEffect *, unsigned long, unsigned long);
    void ApplyOnHitAbilityDamage(CNWSObject *, CNWItemProperty *);
    void ApplyOnHitBlindness(CNWSObject *, int);
    void ApplyOnHitCastSpell(CNWSObject *, CNWItemProperty *, CNWSItem *);
    void ApplyOnHitConfusion(CNWSObject *, int);
    void ApplyOnHitDaze(CNWSObject *, int);
    void ApplyOnHitDeafness(CNWSObject *, int);
    void ApplyOnHitDeathAttack(CNWSObject *, int);
    void ApplyOnHitDisease(CNWSObject *, CNWItemProperty *);
    void ApplyOnHitDispelMagic(CNWSObject *, CNWItemProperty *);
    void ApplyOnHitDispelMagic(CNWSObject *, unsigned long);
    int ApplyOnHitDominate(CNWSObject *, int);
    void ApplyOnHitDoom(CNWSObject *, int);
    void ApplyOnHitFear(CNWSObject *, int);
    void ApplyOnHitGreaterDispel(CNWSObject *, unsigned long);
    void ApplyOnHitHold(CNWSObject *, int);
    void ApplyOnHitKnock(CNWSObject *, unsigned long);
    void ApplyOnHitLesserDispel(CNWSObject *, unsigned long);
    void ApplyOnHitLevelDrain(CNWSObject *, CNWItemProperty *);
    void ApplyOnHitMordysDisjunction(CNWSObject *, unsigned long);
    void ApplyOnHitPoison(CNWSObject *, CNWItemProperty *);
    void ApplyOnHitSilence(CNWSObject *, int);
    void ApplyOnHitSlayAlignmentGroup(CNWSObject *, CNWItemProperty *);
    void ApplyOnHitSlayAlignment(CNWSObject *, CNWItemProperty *);
    void ApplyOnHitSlayRacialGroup(CNWSObject *, CNWItemProperty *);
    void ApplyOnHitSleep(CNWSObject *, int);
    void ApplyOnHitSlow(CNWSObject *, int);
    void ApplyOnHitStun(CNWSObject *, int);
    void ApplyOnHitVampiricRegeneration(CNWSObject *, CNWItemProperty *);
    void ApplyOnHitVorpal(CNWSObject *, CNWItemProperty *);
    void ApplyOnHitWounding(CNWSObject *, CNWItemProperty *);
    int ApplyPoisonPayload(CGameEffect *, unsigned long, unsigned long);
    int ApplyWounding(CGameEffect *);
    CNWSCreature * AsNWSCreature();
    void AutoCloseGUIPanels(int);
    void BringAssociatesToNewFaction(int);
    int BroadcastAssociateCommand(int);
    void BroadcastAttackDataToParty(CNWCCMessageData *, CNWSCombatAttackData *, CNWSCreature *);
    void BroadcastAttackOfOpportunity(unsigned long, int);
    void BroadcastBattleCry();
    void BroadcastCombatStateToParty();
    void BroadcastDamageDataToParty(CNWCCMessageData *, CNWSCreature *);
    void BroadcastDeathDataToParty(CNWCCMessageData *, CNWSCreature *);
    void BroadcastFloatyData(CNWCCMessageData *);
    void BroadcastSavingThrowData(CNWCCMessageData *);
    void BroadcastSkillData(CNWCCMessageData *);
    void BroadcastSpellCast(unsigned long, unsigned char, unsigned short);
    void BroadcastVoiceChat(unsigned char);
    void BroadcastWhirlwindAttack(int);
    int BumpFriends(CNWSCreature *, Vector const &, Vector const &);
    unsigned char CalculateDamagePower(CNWSObject *, int);
    float CalculateDeathExperience(int, int);
    int CalculateMaxElementalDamage(CNWSObject *, int);
    int CalculatePersonalReputationAdjustment(unsigned long);
    int CalculateProjectileTimeToTarget(Vector, int);
    int CalculateSpellSaveDC(int);
    unsigned char CanEquipItem(CNWSItem *, unsigned long *, int, int, int, CNWSPlayer *);
    unsigned char CanEquipMiscellaneous(CNWSItem *, unsigned long *, int, int);
    unsigned char CanEquipShield(CNWSItem *, int, int);
    unsigned char CanEquipWeapon(CNWSItem *, unsigned long *, int, int, CNWSPlayer *);
    unsigned char CanUnEquipWeapon(CNWSItem *);
    int CanUseItem(CNWSItem *, int);
    int CancelAction(unsigned short, unsigned short);
    void CancelGoldTransfer(unsigned long);
    void CancelRest(unsigned short);
    void CheckInventoryForPlotItems();
    int CheckItemAlignmentRestrictions(CNWSItem *);
    int CheckItemClassRestrictions(CNWSItem *);
    int CheckItemRaceRestrictions(CNWSItem *);
    void CheckMasterIsValid(unsigned long, unsigned long);
    int CheckProficiencies(CNWSItem *, unsigned long);
    int CheckUseMagicDeviceSkill(CNWSItem *, int);
    int CheckVisibleList(unsigned long);
    void CleanInvitationLists(int);
    void CleanOutPersonalReputationList();
    int ClearAction(CNWSObjectActionNode *, int);
    void ClearActivities(int);
    int ClearAutoMapData();
    void ClearHostileActionsVersus(CNWSCreature *);
    void ClearPersonalReputation(unsigned long);
    void ClearVisibleList();
    void ComputeAIStateOnAction(int, unsigned long);
    void ComputeAIState();
    void ComputeArmourClass(CNWSItem *, int, int);
    void ComputeModifiedMovementRate();
    float ComputeSpellRange(CExoString, unsigned long);
    int ComputeTotalEquippedWeight();
    float ComputeTotalWalkDistance();
    int ComputeTotalWeightCarried();
    void ConvertModeToggleQuickButton(CNWSQuickbarButton *);
    void CopyQuickButtonsFromDM(CNWSPlayer *);
    int CreateDefaultQuickButtonsDM();
    void CreateDefaultQuickButtons_AddFeat(unsigned char &, unsigned short, int);
    int CreateDefaultQuickButtons_CheckItem(CNWSItem *, unsigned long &, unsigned long &, unsigned long &, unsigned long &);
    void CreateDefaultQuickButtons();
    void CutWaypointPath();
    void DMClearScripts(int);
    void DMResetClearedScripts(int);
    int DecrementSpellReadyCount(unsigned long, unsigned char, unsigned char, unsigned char, unsigned char);
    float DesiredAttackRange(unsigned long, int);
    void DestroyEquippedItems();
    void DisplayFloatyDataToSelf(unsigned long);
    void DoCombatStep(unsigned char, int, unsigned long);
    void DoDamage(int);
    int DoListenDetection(CNWSCreature *, int);
    void DoPerceptionUpdateOnCreature(CNWSCreature *, int);
    int DoSpotDetection(CNWSCreature *, int);
    int DoStealthDetection(CNWSCreature *, int, int *, int *, int);
    unsigned long DriveUpdateLocation(int);
    void DumpToLog();
    int EquipItem(unsigned long, CNWSItem *, int, int);
    int EquipMostDamagingAmmunition(unsigned long, CNWSItem *);
    int EquipMostDamagingMeleeWeapon(unsigned long, int, int);
    int EquipMostDamagingRangedWeapon(unsigned long);
    int EquipMostEffectiveArmor();
    int EvaluateLock(CNWSObject *, int);
    void EventHandler(unsigned long, unsigned long, void *, unsigned long, unsigned long);
    void ExternalResolveAttack(unsigned long, int);
    void FailedOpenInformAssociates();
    int ForceMoveToPoint(CNWSForcedAction *);
    int GetAIStateActee();
    int GetAIStateAction();
    int GetAIStateActivities();
    int GetAIState();
    int GetActionQueueList();
    int GetActivityLocked(unsigned long);
    int GetActivity(int);
    int GetAlreadyRemovedFromEncounter();
    int GetAmbientAnimationState();
    int GetAmmunitionAvailable(int);
    int GetAnimalCompanionCreatureType();
    int GetAnimalCompanionId();
    CExoString GetAnimalCompanionName();
    int GetAppearance();
    int GetAreaOfEffectObjects();
    short GetArmorClass();
    unsigned long GetAssociateId(unsigned short, int);
    int GetAssociateList();
    int GetAssociateType();
    int GetAttackResultHit(CNWSCombatAttackData *);
    int GetAttackTarget();
    int GetAttemptedAttackTarget();
    int GetAttemptedSpellTarget();
    int GetAutoMapAreaList();
    int GetAutoMapTileData();
    CNWSBarter * GetBarterInfo(int);
    int GetBlind();
    int GetBlindsightDistance();
    unsigned short GetBodyBagAppearance();
    int GetBodyBagId();
    int GetBodyBag();
    int GetBroadcastedAOOTo();
    int GetCalculateNPCWeight();
    int GetCanSlayAlignment(CNWSObject *, CNWItemProperty *);
    unsigned char GetCombatMode();
    int GetCombatRound();
    int GetCombatStateTimer();
    int GetCombatState();
    int GetCounterSpellTarget();
    int GetCreatureReputation(unsigned long, int, int);
    int GetCreatureSize();
    int GetCreatureState();
    int GetCurrentItemContainer();
    int GetCutsceneCameraMode();
    int GetCutsceneCameraMovementRateFactor();
    int GetCutsceneGhost();
    int GetDMCharacter();
    unsigned short GetDamageFlags();
    int GetDecayTime();
    int GetDefensiveCastingMode();
    int GetDesiredAreaId();
    int GetDesiredAreaLocation();
    int GetDesiredAreaUpdateComplete();
    int GetDesiredCombatMode();
    unsigned char GetDetectMode();
    int GetDialogInterruptable();
    CResRef GetDialogResref();
    int GetDisarmable();
    CExoString GetDisplayName();
    unsigned long GetDominatedCreatureId();
    int GetDriveModeMoveFactor();
    int GetDriveMode();
    int GetDropItemAnimationPlayed();
    int GetEffectIcons();
    unsigned long GetEffectSpellId();
    int GetEncounterId();
    int GetEncumbranceState();
    int GetEquipArrayIndex();
    int GetEquippedWeight();
    int GetExternalCombatModeEnabled();
    int GetFacingAndAnimationDone();
    int GetFactionId();
    CNWSFaction * GetFaction();
    int GetFamiliarCreatureType();
    int GetFamiliarId();
    CExoString GetFamiliarName();
    CExoArrayList<CGameEffect *> GetFilteredEffectList(unsigned char);
    CExoLocString & GetFirstName();
    int GetFlanked(CNWSCreature *);
    int GetFlatFooted();
    int GetFootstepType();
    int GetForcedWalk();
    int GetFreeWill();
    unsigned char GetGender();
    int GetGoingToBeAttackedBy();
    int GetGold();
    int GetHasArms();
    int GetHasInvisbilityEffectApplied();
    int GetHasLegs();
    int GetHasted();
    int GetHealAnimationPlayed();
    int GetHenchmanId(int);
    int GetHenchmanIndex(unsigned long);
    int GetInSubAreasArray();
    int GetInTransit();
    int GetInitiativeExpired();
    int GetInitiativeRoll();
    int GetInventory();
    int GetInvisible(CNWSObject *, int);
    int GetInvitedToPartyBy();
    int GetInvitedToParty();
    int GetIsAbleToPossessFamiliar();
    int GetIsCreatureBumpable(CNWSCreature *);
    int GetIsDiseased();
    int GetIsExcited();
    int GetIsImmortal();
    int GetIsInInvitationsIgnored(unsigned long);
    int GetIsInInvitationsOffered(unsigned long);
    int GetIsInMelee();
    int GetIsInUseRange(unsigned long, float, int);
    int GetIsPoisoned();
    int GetIsPolymorphLocked();
    int GetIsPolymorphed();
    int GetIsPolymorphing();
    int GetIsPossessedFamiliar();
    int GetIsWeaponEffective(unsigned long, int);
    int GetItemCastSpellBroadcastAOO();
    int GetItemContainerArrayIndex();
    unsigned long GetItemCount(int);
    int GetItemRepository();
    CNWSJournal * GetJournal();
    int GetJumpedRecently();
    int GetLastAmmunitionWarning();
    int GetLastAssociateCommand();
    int GetLastBlockingDoor();
    int GetLastCounterDomainLevel();
    int GetLastCounterMetaType();
    int GetLastCounterSpellClass();
    int GetLastCounterSpellID();
    int GetLastHideRoll();
    int GetLastItemCastSpellLevel();
    int GetLastItemCastSpell();
    int GetLastListenRoll();
    int GetLastMoveSilentlyRoll();
    CExoLocString & GetLastName();
    int GetLastPerceived();
    int GetLastPerceptionHeard();
    int GetLastPerceptionInaudible();
    int GetLastPerceptionSeen();
    int GetLastPerceptionVanished();
    int GetLastPickupFailed();
    int GetLastSpellCastItem();
    int GetLastSpellProjectileTime();
    int GetLastSpellUnReadied();
    int GetLastSpotRoll();
    int GetLastTrapDetected();
    float GetListenCheckDistance();
    int GetLockAnimationPlayed();
    unsigned long GetLockOrientationToObject();
    int GetLootable();
    int GetMagicalArrowsEquipped();
    int GetMagicalBoltsEquipped();
    int GetMagicalBulletsEquipped();
    int GetMasterId();
    short GetMaxHitPoints(int);
    int GetMode(unsigned char);
    CExoString GetModelType();
    float GetMovementRateFactor();
    unsigned long GetNearestEnemy(float, unsigned long, int, int);
    int GetNoPermDeath();
    int GetNonPolymorphCONBase();
    int GetNonPolymorphDEXBase();
    int GetNonPolymorphSTRBase();
    int GetNumAreas();
    int GetNumAssociatesOfType(unsigned short);
    int GetNumCharSheetViewers();
    int GetNumCounterSpellingCreatures(unsigned long);
    int GetNumInvited();
    int GetOnCreationScriptExecuted();
    int GetOriginalFactionId();
    int GetPVPList();
    int GetPVPPlayerLikesMe(unsigned long);
    int GetPVPReputation(unsigned long);
    int GetPassiveAttackBehaviour();
    int GetPathfindInformation();
    int GetPendingRealization();
    int GetPersonalReputationList();
    int GetPickUpItemAnimationPlayed();
    int GetPlayerCharacter();
    int GetPolymorphSpellId1();
    int GetPolymorphSpellId2();
    int GetPolymorphSpellId3();
    int GetPonyRide();
    CResRef GetPortrait();
    int GetPreDominationFactionId();
    int GetPrePolymorphCON();
    int GetPrePolymorphDEX();
    int GetPrePolymorphSTR();
    int GetPreferredAttackDistance();
    CNWSQuickbarButton * GetQuickbarButton(unsigned char);
    int GetQuickbarInitialized();
    int GetRangeWeaponEquipped();
    int GetRelativeWeaponSize(CNWSItem *);
    int GetRepositoryArrayIndex();
    int GetReputationList();
    float GetRunRate();
    int GetScriptName(int);
    int GetSilent();
    int GetSittingObject();
    int GetSlowed();
    int GetSoundSet();
    int GetSpellIdentifiedList();
    int GetSpellOrHealActionQueued();
    int GetSpellTarget();
    float GetSpotCheckDistance();
    int GetStandardFactionReputation(int);
    CNWSCreatureStats * GetStats();
    int GetStealAnimationPlayed();
    int GetStealAttemptDetected();
    int GetStealthMode();
    int GetSummonedAnimalCompanion();
    int GetSummonedCreatureId();
    int GetSummonedFamiliar();
    int GetTauntAnimationPlayed();
    int GetTaunt();
    int GetTileExplored(unsigned long, int, int);
    int GetTotalEffectBonus(unsigned char, CNWSObject *, int, int, unsigned char, unsigned char, unsigned char, unsigned char, int);
    int GetTotalWeightCarried();
    int GetTrapAnimationPlayed();
    int GetTurnResistanceHD();
    int GetUnarmed();
    int GetUnlockAnimationPlayed();
    int GetUpdateCombatInformation();
    int GetUpdateDisplayName();
    int GetUseMonkAbilities();
    int GetUseRange(unsigned long, Vector &, float &);
    int GetVisibilityList();
    CNWVisibilityNode * GetVisibleListElement(unsigned long);
    int GetVisionType();
    int GetWalkAnimation();
    float GetWalkRate();
    int GetWeaponPower(CNWSObject *, int);
    int GetWeaponScale();
    int HandleSubAreaStateChanges(CExoArrayList<unsigned long> *, CExoArrayList<unsigned long> *, int);
    void InitialisePVPList();
    void InitializeQuickbar();
    int IsAIState(unsigned short);
    int IsHelpless();
    int LearnScroll(unsigned long);
    void LoadAssociateList(CResGFF *, CResStruct *);
    void LoadAutoMapData(CResGFF *, CResStruct *);
    int LoadCreature(CResGFF *, CResStruct *, int, int, int, int);
    int LoadFromTemplate(CResRef, CExoString *);
    void LoadPersonalReputationList(CResGFF *, CResStruct *);
    int LoadPolymorphData(CResGFF *, CResStruct *, int);
    void LoadQuickBarHack(CExoString);
    void LoadQuickButtons(CResGFF *, CResStruct *);
    float MaxAttackRange(unsigned long, int, int);
    void MergeItem(CNWSItem *, CNWSItem *);
    void NotifyAssociateActionToggle(int);
    void PacifyCreature();
    void PacifyCreature(unsigned long);
    void PayToIdentifyItem(unsigned long, unsigned long);
    int Polymorph(int, CGameEffect *, int);
    void PossessCreatureDM(unsigned long, unsigned char);
    void PossessCreature(unsigned long);
    void PossessFamiliar();
    void PostProcess();
    void ProcessMasterDeathForAssociates();
    void ProcessPendingCombatActions();
    void QuickbarButton_RemoveItem(unsigned long);
    void QuickbarButton_RemoveSpell(unsigned long);
    void ReadItemsFromGff(CResGFF *, CResStruct *, int, int);
    void ReadScriptsFromGff(CResGFF *, CResStruct *);
    void RealizeAssociateList();
    void ReceiveAssociateCommand(int);
    void RecomputeAmbientAnimationState();
    void RelayQuickChatCommandToAssociates(unsigned short);
    void RemoveAllAssociates();
    int RemoveAreaOfEffect(unsigned long);
    void RemoveAssociate(unsigned long);
    void RemoveBadEffects();
    int RemoveCharmEffectsByFactionID(int, int);
    int RemoveCharmEffectsByOBJECTID(unsigned long, int);
    void RemoveCombatInvisibilityEffects();
    int RemoveDominationEffect();
    void RemoveDomination();
    void RemoveFromArea(int);
    int RemoveFromAssociateList(unsigned long);
    int RemoveFromInvitationsOffered(unsigned long);
    void RemoveFromPVPList(unsigned long);
    void RemoveFromVisibleList(unsigned long);
    void RemoveGold(int, int);
    int RemoveItemFromRepository(CNWSItem *, int);
    int RemoveItem(CNWSItem *, int, int, int, int);
    void RemoveSleepEffects();
    void RemoveSpellActionFromRound();
    void RemoveWoundingEffects();
    int ReplyToInvitation(int, unsigned long);
    void ReprocessAssociateList();
    int RequestBuy(unsigned long, unsigned long, unsigned long);
    int RequestSell(unsigned long, unsigned long);
    void ResetItemPossessor();
    void ResetPCDominatedScripts();
    void ResetUpdateTimes(unsigned long, unsigned long);
    void ResolveAmmunition(unsigned long);
    void ResolveAttackRoll(CNWSObject *);
    void ResolveAttack(unsigned long, int, int);
    void ResolveCachedSpecialAttacks();
    void ResolveDamageShields(CNWSCreature *);
    void ResolveDamage(CNWSObject *);
    void ResolveDeathAttack(CNWSCreature *);
    int ResolveDefensiveEffects(CNWSObject *, int);
    int ResolveElementalDamage(CNWSObject *);
    void ResolveInitiative();
    void ResolveItemCastSpell(CNWSObject *);
    void ResolveMeleeAnimations(int, int, CNWSObject *, int);
    void ResolveMeleeAttack(CNWSObject *, int, int);
    void ResolveMeleeSpecialAttack(int, int, CNWSObject *, int);
    void ResolveOnHitEffect(CNWSObject *, int, int);
    void ResolveOnHitVisuals(CNWSObject *);
    void ResolvePostMeleeDamage(CNWSObject *);
    void ResolvePostRangedDamage(CNWSObject *);
    void ResolveRangedAnimations(CNWSObject *, int);
    void ResolveRangedAttack(CNWSObject *, int, int);
    void ResolveRangedMiss(CNWSObject *);
    void ResolveRangedSpecialAttack(CNWSObject *, int);
    void ResolveSafeProjectile(unsigned long, int);
    void ResolveSituationalModifiers(CNWSObject *);
    void ResolveSneakAttack(CNWSCreature *);
    void Rest(int, int);
    void RestoreCutsceneVars();
    void RestoreItemPropertiesInRepository(CItemRepository *);
    void RestoreItemProperties();
    int RunEquip(unsigned long, unsigned long, unsigned long);
    int RunUnequip(unsigned long, unsigned long, unsigned char, unsigned char, int, unsigned long);
    void SaveAssociateList(CResGFF *, CResStruct *);
    void SaveAutoMapData(CResGFF *, CResStruct *);
    int SaveCreature(CResGFF *, CResStruct *, int, int, int);
    void SavePersonalReputationList(CResGFF *, CResStruct *);
    void SaveQuickBarHack(CExoString);
    void SaveQuickButtons(CResGFF *, CResStruct *);
    unsigned char SavingThrowRoll(unsigned char, unsigned short, unsigned char, unsigned long, int, unsigned short, int);
    void SawTrapInformAssociates(unsigned long);
    void SendFeedbackMessage(unsigned short, CNWCCMessageData *, CNWSPlayer *);
    void SendFeedbackString(CExoString, CNWSPlayer *);
    int SetAIStateFlag(unsigned short, int);
    int SetAIState(unsigned short);
    int SetActivityLocked(unsigned long, int);
    void SetActivity(int, int);
    int SetAlive();
    void SetAllTilesExplored(unsigned long, int);
    int SetAlreadyRemovedFromEncounter(int);
    int SetAmbientAnimationState(unsigned char);
    int SetAnimalCompanionCreatureType(int);
    void SetAnimalCompanionName(CExoString);
    void SetAnimation(int);
    void SetAssociateListenPatterns();
    void SetAssociateType(unsigned short);
    void SetAssociatesToForgetAggression(unsigned long);
    int SetAttackTarget(unsigned long);
    int SetAttemptedAttackTarget(unsigned long);
    int SetAttemptedSpellTarget(unsigned long);
    int SetAutoMapData(int, unsigned long *, unsigned char **);
    int SetBlindsightDistance(float);
    int SetBodyBagId(unsigned long);
    int SetBodyBag(unsigned char);
    int SetBroadcastedAOOTo(int);
    int SetCalculateNPCWeight(int);
    void SetCombatMode(unsigned char, int);
    void SetCombatState(int);
    int SetCounterSpellTarget(unsigned long);
    int SetCreatureSize(int);
    int SetCreatureState(unsigned char);
    int SetCurrentItemContainer(unsigned long);
    int SetCutsceneCameraMode(int);
    int SetCutsceneCameraMovementRateFactor(float);
    int SetCutsceneGhost(int);
    int SetDMCharacter(int);
    int SetDead();
    int SetDecayTime(unsigned long);
    void SetDefensiveCastingMode(unsigned char);
    int SetDesiredAreaId(unsigned long);
    int SetDesiredAreaLocation(Vector);
    int SetDesiredAreaUpdateComplete(int);
    int SetDesiredCombatMode(unsigned char);
    void SetDetectMode(unsigned char);
    int SetDisarmable(int);
    void SetDisplayName(CExoString);
    int SetDriveModeMoveFactor(float);
    int SetDriveMode(int);
    int SetDropItemAnimationPlayed(int);
    void SetEffectSpellId(unsigned long);
    int SetEncounterId(unsigned long);
    int SetEncumbranceState(int);
    int SetEquipArrayIndex(unsigned short);
    int SetEquippedWeight(int);
    void SetExcitedState(unsigned char);
    int SetExternalCombatModeEnabled(int);
    int SetFacingAndAnimationDone(int);
    int SetFactionId(int);
    int SetFamiliarCreatureType(int);
    void SetFamiliarName(CExoString);
    int SetFootstepType(int);
    int SetForcedWalk(int);
    int SetGoingToBeAttackedBy(unsigned long);
    void SetGold(int);
    int SetHasArms(int);
    int SetHasLegs(int);
    int SetHasted(int);
    int SetHealAnimationPlayed(int);
    void SetId(unsigned long);
    void SetInTransit(int);
    int SetInitiativeExpired(int);
    int SetInitiativeRoll(unsigned char);
    int SetInvitedToPartyBy(unsigned long);
    void SetInvitedToParty(int);
    int SetIsDiseased(int);
    int SetIsImmortal(int);
    int SetIsPoisoned(int);
    int SetIsPolymorphed(int);
    int SetItemCastSpellBroadcastAOO(int);
    int SetItemContainerArrayIndex(unsigned short);
    int SetJumpedRecently(int);
    int SetLastAmmunitionWarning(int);
    int SetLastAssociateCommand(int);
    int SetLastBlockingDoor(unsigned long);
    int SetLastCounterDomainLevel(unsigned char);
    int SetLastCounterMetaType(unsigned char);
    int SetLastCounterSpellClass(unsigned char);
    int SetLastCounterSpellID(int);
    int SetLastHearbeatTime(unsigned long, unsigned long);
    int SetLastHideRoll(unsigned char);
    int SetLastItemCastSpellLevel(int);
    int SetLastItemCastSpell(int);
    int SetLastListenRoll(unsigned char);
    int SetLastMoveSilentlyRoll(unsigned char);
    int SetLastPerceived(unsigned long);
    int SetLastPerceptionHeard(int);
    int SetLastPerceptionInaudible(int);
    int SetLastPerceptionSeen(int);
    int SetLastPerceptionVanished(int);
    int SetLastPickupFailed(int);
    int SetLastSpellCastItem(unsigned long);
    int SetLastSpellUnReadied(int);
    int SetLastSpotRoll(unsigned char);
    int SetLastTrapDetected(unsigned long);
    int SetListenCheckDistance(float);
    int SetLockAnimationPlayed(int);
    void SetLockOrientationToObject(unsigned long);
    int SetLootable(int);
    int SetMagicalArrowsEquipped(int);
    int SetMagicalBoltsEquipped(int);
    int SetMagicalBulletsEquipped(int);
    int SetMasterId(unsigned long);
    int SetMaxListenCheckDistance(float);
    int SetMaxSpotCheckDistance(float);
    void SetMode(unsigned char, int);
    void SetModelType(CExoString);
    void SetMovementRateFactor(float);
    int SetNoPermDeath(int);
    int SetNumAreas(int);
    int SetNumCharSheetViewers(int);
    int SetOnCreationScriptExecuted(int);
    int SetOriginalFactionId(int);
    void SetPCDominatedScripts();
    void SetPVPPlayerLikesMe(unsigned long, int, int);
    int SetPassiveAttackBehaviour(int);
    int SetPendingRealization(int);
    int SetPersonalReputation(CExoArrayList<CNWSPersonalReputation> *);
    int SetPickUpItemAnimationPlayed(int);
    int SetPlayerCharacter(int);
    int SetPolymorphLocked(int);
    int SetPonyRide(int);
    void SetPortraitId(unsigned short);
    void SetPortrait(CResRef);
    int SetPreDominationFactionId(int);
    int SetPrePolymorphCON(int);
    int SetPrePolymorphDEX(int);
    int SetPrePolymorphSTR(int);
    int SetPreferredAttackDistance(float);
    void SetQuickbarButton_AssociateCommand(unsigned char, int, unsigned short, unsigned long);
    void SetQuickbarButton_CommandLine(unsigned char, CExoString const &, CExoString const &);
    void SetQuickbarButton_DM_General_ResRefParam(unsigned char, unsigned char, CResRef const &);
    void SetQuickbarButton_DungeonMaster_CreateCreature(unsigned char, CResRef const &, CExoString const &);
    void SetQuickbarButton_DungeonMaster_CreateEncounter(unsigned char, CResRef const &, CExoString const &);
    void SetQuickbarButton_DungeonMaster_CreateItem(unsigned char, CResRef const &, CExoString const &);
    void SetQuickbarButton_DungeonMaster_CreatePlaceable(unsigned char, CResRef const &, CExoString const &);
    void SetQuickbarButton_DungeonMaster_CreatePortal(unsigned char, CResRef const &, CExoString const &);
    void SetQuickbarButton_DungeonMaster_CreateTrigger(unsigned char, CResRef const &, CExoString const &);
    void SetQuickbarButton_DungeonMaster_CreateWaypoint(unsigned char, CResRef const &, CExoString const &);
    void SetQuickbarButton_GeneralINTParam(unsigned char, unsigned char, int);
    void SetQuickbarButton_GeneralNoParam(unsigned char, unsigned char);
    void SetQuickbarButton_Item(unsigned char, unsigned long, int, unsigned long);
    void SetQuickbarButton_SpellLikeAbility(unsigned char, unsigned long, unsigned char);
    void SetQuickbarButton_Spell(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char);
    int SetRepositoryArrayIndex(unsigned short);
    int SetReputation(CExoArrayList<int> *);
    void SetScriptName(int, CExoString);
    int SetSilent(int);
    int SetSittingObject(unsigned long);
    int SetSlowed(int);
    int SetSoundSet(unsigned short);
    int SetSpellTarget(unsigned long);
    int SetSpotCheckDistance(float);
    void SetStandardFactionReputation(int, int);
    int SetStealAnimationPlayed(int);
    int SetStealAttemptDetected(int);
    void SetStealthMode(unsigned char);
    int SetSummonedAnimalCompanion(int);
    int SetSummonedFamiliar(int);
    int SetTauntAnimationPlayed(int);
    int SetTaunt(int);
    void SetTileExplored(unsigned long, int, int);
    int SetTrapAnimationPlayed(int);
    int SetUnlockAnimationPlayed(int);
    int SetUpdateCombatInformation(int);
    int SetUpdateDisplayName(int);
    int SetVisionType(unsigned char);
    int SetWalkAnimation(unsigned char);
    int SetWeaponScale(float);
    void SignalMeleeDamage(CNWSObject *, int);
    void SignalRangedDamage(CNWSObject *, int);
    void SpawnInHeartbeatPerception(int);
    void SplitItem(CNWSItem *, int);
    int StartBarter(unsigned long, unsigned long, int);
    void StartGuiTimingBar(unsigned long, unsigned char);
    void StopGuiTimingBar();
    void StoreCutsceneVars();
    void SummonAnimalCompanion();
    void SummonAssociate(CResRef, CExoString, unsigned short);
    void SummonFamiliar();
    int TerminateClientSidePath(int);
    int TestAIStateAsMode(int);
    int ToggleMode(unsigned char);
    int TransferGold(unsigned long, Vector, unsigned long, int, unsigned char, unsigned char);
    int TranslateAddress(unsigned long, int, int, int *, int *);
    int UnPolymorph(CGameEffect *);
    int UnequipItem(CNWSItem *, int);
    void UnpossessCreatureDM();
    void UnpossessCreature();
    void UnpossessFamiliar();
    void UnsummonMyself();
    void UpdateActionQueue();
    void UpdateAppearanceDependantInfo();
    void UpdateAppearanceForEquippedItems();
    void UpdateAttributesOnEffect(CGameEffect *, int);
    void UpdateAutoMap(unsigned long);
    void UpdateCombatRoundTimer();
    void UpdateEffectPtrs();
    void UpdateEncumbranceState(int);
    int UpdateExcitedStateTimer();
    void UpdatePersonalSpace();
    int UpdateSpecialAttacks();
    int UpdateSubareasOnJumpPosition(Vector, unsigned long);
    int UpdateSubareasOnMoveTo(Vector, Vector, int, CExoArrayList<unsigned long> *, int);
    int UpdateTrapCheckDM();
    void UpdateTrapCheck();
    void UpdateVisibleList();
    int UseFeat(unsigned short, unsigned short, unsigned long, unsigned long, Vector *);
    int UseItem(unsigned long, unsigned char, unsigned char, unsigned long, Vector, unsigned long);
    int UseLoreOnItem(unsigned long);
    int UseSkill(unsigned char, unsigned char, unsigned long, Vector, unsigned long, unsigned long, int);
    void ValidateCounterSpellData(unsigned long, unsigned char, unsigned char);
    int WalkUpdateLocationDistance(float, Vector *, Vector *, CExoArrayList<unsigned long> *);
    int WalkUpdateLocationTestDistance(Vector, Vector);
    unsigned long WalkUpdateLocation();
    ~CNWSCreature();
    CNWSCreature(unsigned long, int, int);

    /* 0x1C4/452 */ unsigned long PonyRide;
    /* 0x1C8/0456 */ unsigned short EquipArrayIndex;
    /* 0x1CA/0458 */ unsigned short field_1CA;
    /* 0x1CC/0460 */ unsigned long field_1CC;
    /* 0x1D0/0464 */ unsigned long field_1D0;
    /* 0x1D4/0468 */ unsigned long field_1D4;
    /* 0x1D8/0472 */ unsigned long field_1D8;
    /* 0x1DC/0476 */ unsigned long field_1DC;
    /* 0x1E0/0480 */ unsigned long field_1E0;
    /* 0x1E4/0484 */ unsigned long field_1E4;
    /* 0x1E8/0488 */ unsigned long field_1E8;
    /* 0x1EC/0492 */ unsigned long field_1EC;
    /* 0x1F0/0496 */ unsigned long field_1F0;
    /* 0x1F4/0500 */ unsigned long field_1F4;
    /* 0x1F8/504 */ CExoString Scripts[13];
    /* 0x260/608 */ CExoString DominatedScripts[13];
    /* 0x2C8/712 */ CNWSQuickbarButton* Quickbar;
    /* 0x2CC/716 */ unsigned long Lootable;
    /* 0x2D0/720 */ unsigned long DecayTime;
    /* 0x2D4/724 */ unsigned long BodyBagID;
    /* 0x2D8/0728 */ unsigned long DesiredAreaId;
    /* 0x2DC/0732 */ Vector DesiredAreaLocation;
    /* 0x2E8/0744 */ unsigned long DesiredAreaUpdateComplete;
    /* 0x2EC/0748 */ CExoArrayList<nwobjid> AOEList;
    /* 0x2F8/0760 */ CExoArrayList<nwobjid> SubareaList;
    /* 0x304/772 */ unsigned long BlockedBy;
    /* 0x308/776 */ CPathfindInformation* PathfindInformation;
    /* 0x30C/0780 */ unsigned long field_30C;
    /* 0x310/0784 */ unsigned long UpdateCombatInfo;
    /* 0x314/0788 */ unsigned long NumCharSheetViewers;
    /* 0x318/0792 */ unsigned long OnCreationScriptExecuted;
    /* 0x31C/0796 */ unsigned long field_31C;
    /* 0x320/0800 */ unsigned long field_320;
    /* 0x324/0804 */ unsigned long field_324;
    /* 0x328/0808 */ unsigned long field_328;
    /* 0x32C/0812 */ unsigned long field_32C;
    /* 0x330/0816 */ unsigned long LastTrapDetected;
    /* 0x334/0820 */ unsigned long field_334;
    /* 0x338/0824 */ unsigned long field_338;
    /* 0x33C/0828 */ unsigned long field_33C;
    /* 0x340/0832 */ unsigned long field_340;
    /* 0x344/0836 */ unsigned long Excited;
    /* 0x348/0840 */ unsigned long field_348;
    /* 0x34C/0844 */ unsigned long field_34C;
    /* 0x350/0848 */ unsigned long field_350;
    /* 0x354/0852 */ unsigned long field_354;
    /* 0x358/0856 */ unsigned long field_358;
    /* 0x35C/0860 */ unsigned long PendingRealization;
    /* 0x360/0864 */ unsigned long field_360;
    /* 0x364/0868 */ unsigned long field_364;
    /* 0x368/0872 */ unsigned long field_368;
    /* 0x36C/0876 */ unsigned long ActionQueueList;
    /* 0x370/0880 */ unsigned long field_370;
    /* 0x374/0884 */ unsigned long field_374;
    /* 0x378/0888 */ unsigned long field_378;
    /* 0x37C/0892 */ unsigned long field_37C;
    /* 0x380/0896 */ unsigned long field_380;
    /* 0x384/0900 */ unsigned long field_384;
    /* 0x388/0904 */ unsigned long field_388;
    /* 0x38C/0908 */ unsigned long field_38C;
    /* 0x390/0912 */ unsigned long field_390;
    /* 0x394/0916 */ unsigned long field_394;
    /* 0x398/0920 */ unsigned long field_398;
    /* 0x39C/0924 */ unsigned long field_39C;
    /* 0x3A0/0928 */ unsigned long field_3A0;
    /* 0x3A4/0932 */ unsigned long field_3A4;
    /* 0x3A8/0936 */ unsigned long field_3A8;
    /* 0x3AC/0940 */ unsigned long field_3AC;
    /* 0x3B0/0944 */ unsigned long field_3B0;
    /* 0x3B4/0948 */ unsigned long field_3B4;
    /* 0x3B8/0952 */ unsigned long field_3B8;
    /* 0x3BC/0956 */ unsigned long field_3BC;
    /* 0x3C0/0960 */ unsigned long field_3C0;
    /* 0x3C4/0964 */ unsigned long field_3C4;
    /* 0x3C8/0968 */ unsigned long field_3C8;
    /* 0x3CC/0972 */ unsigned long field_3CC;
    /* 0x3D0/0976 */ unsigned long field_3D0;
    /* 0x3D4/0980 */ unsigned long field_3D4;
    /* 0x3D8/0984 */ unsigned long field_3D8;
    /* 0x3DC/0988 */ unsigned long field_3DC;
    /* 0x3E0/0992 */ unsigned long field_3E0;
    /* 0x3E4/0996 */ unsigned long field_3E4;
    /* 0x3E8/1000 */ unsigned long field_3E8;
    /* 0x3EC/1004 */ unsigned long field_3EC;
    /* 0x3F0/1008 */ unsigned long field_3F0;
    /* 0x3F4/1012 */ unsigned long field_3F4;
    /* 0x3F8/1016 */ unsigned long field_3F8;
    /* 0x3FC/1020 */ unsigned long field_3FC;
    /* 0x400/1024 */ unsigned long field_400;
    /* 0x404/1028 */ unsigned long field_404;
    /* 0x408/1032 */ unsigned long field_408;
    /* 0x40C/1036 */ unsigned long field_40C;
    /* 0x410/1040 */ unsigned long field_410;
    /* 0x414/1044 */ unsigned long field_414;
    /* 0x418/1048 */ unsigned long field_418;
    /* 0x41C/1052 */ unsigned long field_41C;
    /* 0x420/1056 */ unsigned long field_420;
    /* 0x424/1060 */ unsigned long field_424;
    /* 0x428/1064 */ unsigned long field_428;
    /* 0x42C/1068 */ unsigned long field_42C;
    /* 0x430/1072 */ unsigned long field_430;
    /* 0x434/1076 */ unsigned long field_434;
    /* 0x438/1080 */ unsigned long field_438;
    /* 0x43C/1084 */ unsigned long field_43C;
    /* 0x440/1088 */ unsigned long field_440;
    /* 0x444/1092 */ unsigned long field_444;
    /* 0x448/1096 */ unsigned long field_448;
    /* 0x44C/1100 */ unsigned long field_44C;
    /* 0x450/1104 */ unsigned long field_450;
    /* 0x454/1108 */ unsigned long field_454;
    /* 0x458/1112 */ unsigned long field_458;
    /* 0x45C/1116 */ unsigned long field_45C;
    /* 0x460/1120 */ unsigned long field_460;
    /* 0x464/1124 */ unsigned long field_464;
    /* 0x468/1128 */ unsigned long field_468;
    /* 0x46C/1132 */ unsigned long field_46C;
    /* 0x470/1136 */ unsigned long field_470;
    /* 0x474/1140 */ unsigned long field_474;
    /* 0x478/1144 */ unsigned long field_478;
    /* 0x47C/1148 */ unsigned long field_47C;
    /* 0x480/1152 */ unsigned long field_480;
    /* 0x484/1156 */ char AmbientAnimationState;
    /* 0x485/1157 */ unsigned char field_485;
    /* 0x486/1158 */ unsigned char field_486;
    /* 0x487/1159 */ unsigned char field_487;
    /* 0x488/1160 */ CExoString ModelType;
    /* 0x490/1168 */ char **AreaMiniMaps;
    /* (mtype:CExoArrayList<unsigned long>) */
    /* 0x494/1172 */ CExoArrayList<unsigned long> AreaList;
    /* 0x4A0/1184 */ unsigned long AreaCount;
    /* 0x4A4/1188 */ unsigned long field_4A4;
    /* 0x4A8/1192 */ unsigned long field_4A8;
    /* 0x4AC/1196 */ unsigned char ModeDetect;
    /* 0x4AD/1197 */ unsigned char ModeStealth;
    /* 0x4AE/1198 */ unsigned char ModeDefensiveCasting;
    /* 0x4AF/1199 */ unsigned char CombatMode;
    /* 0x4B0/1200 */ unsigned char ModeDesired;
    /* 0x4B1/1201 */ unsigned char field_4B1;
    /* 0x4B2/1202 */ unsigned char field_4B2;
    /* 0x4B3/1203 */ unsigned char field_4B3;
    /* 0x4B4/1204 */ nwobjid CounterspellTarget;
    /* 0x4B8/1208 */ unsigned char InitiativeRoll;
    /* 0x4B9/1209 */ unsigned char field_4B9;
    /* 0x4BA/1210 */ unsigned char field_4BA;
    /* 0x4BB/1211 */ unsigned char field_4BB;
    /* 0x4BC/1212 */ unsigned long InitiativeExpired;
    /* 0x4C0/1216 */ unsigned long InCombat;
    /* 0x4C4/1220 */ unsigned long CombatStateTimer;
    /* 0x4C8/1224 */ unsigned long PassiveAttackBehaviour;
    /* 0x4CC/1228 */ unsigned long HasArms;
    /* 0x4D0/1232 */ unsigned long HasLegs;
    /* 0x4D4/1236 */ unsigned long Disarmable;
    /* 0x4D8/1240 */ unsigned long CreatureSize;
    /* 0x4DC/1244 */ float PreferredAttackDistance;
    /* 0x4E0/1248 */ float WeaponScale;
    /* 0x4E4/1252 */ unsigned long AttackTarget;
    /* 0x4E8/1256 */ unsigned long AttemptedAttackTarget;
    /* 0x4EC/1260 */ unsigned long field_4EC;
    /* 0x4F0/1264 */ unsigned long field_4F0;
    /* 0x4F4/1268 */ unsigned long field_4F4;
    /* 0x4F8/1272 */ nwobjid Attacker;
    /* 0x4FC/1276 */ nwobjid AttemptedSpellTarget;
    /* 0x500/1280 */ nwobjid SpellTarget;
    /* 0x504/1284 */ unsigned long LastAmmoWarning;
    /* 0x508/1288 */ unsigned long field_508;
    /* 0x50C/1292 */ unsigned long field_50C;
    /* 0x510/1296 */ unsigned long BroadcastedAOOTo;
    /* 0x514/1300 */ unsigned long field_514;
    /* 0x518/1304 */ unsigned long ExternalCombatModeEnabled;
    /* 0x51C/1308 */ unsigned long field_51C;
    /* 0x520/1312 */ unsigned long field_520;
    /* 0x524/1316 */ unsigned long field_524;
    /* 0x528/1320 */ unsigned long field_528;
    /* 0x52C/1324 */ unsigned long field_52C;
    /* 0x530/1328 */ unsigned long field_530;
    /* 0x534/1332 */ unsigned long field_534;
    /* 0x538/1336 */ unsigned long field_538;
    /* 0x53C/1340 */ unsigned long field_53C;
    /* 0x540/1344 */ unsigned long field_540;
    /* 0x544/1348 */ unsigned long field_544;
    /* 0x548/1352 */ unsigned long field_548;
    /* 0x54C/1356 */ unsigned long field_54C;
    /* 0x550/1360 */ unsigned long field_550;
    /* 0x554/1364 */ unsigned long field_554;
    /* 0x558/1368 */ unsigned long field_558;
    /* 0x55C/1372 */ unsigned long field_55C;
    /* 0x560/1376 */ unsigned long field_560;
    /* 0x564/1380 */ unsigned long field_564;
    /* 0x568/1384 */ unsigned long field_568;
    /* 0x56C/1388 */ unsigned long field_56C;
    /* 0x570/1392 */ unsigned long field_570;
    /* 0x574/1396 */ unsigned long field_574;
    /* 0x578/1400 */ unsigned long field_578;
    /* 0x57C/1404 */ unsigned long field_57C;
    /* 0x580/1408 */ unsigned long field_580;
    /* 0x584/1412 */ unsigned long field_584;
    /* 0x588/1416 */ unsigned long field_588;
    /* 0x58C/1420 */ unsigned long field_58C;
    /* 0x590/1424 */ unsigned long field_590;
    /* 0x594/1428 */ unsigned long field_594;
    /* 0x598/1432 */ unsigned long field_598;
    /* 0x59C/1436 */ unsigned long field_59C;
    /* 0x5A0/1440 */ unsigned long field_5A0;
    /* 0x5A4/1444 */ unsigned long field_5A4;
    /* 0x5A8/1448 */ unsigned long field_5A8;
    /* 0x5AC/1452 */ unsigned long field_5AC;
    /* 0x5B0/1456 */ unsigned long field_5B0;
    /* 0x5B4/1460 */ unsigned long field_5B4;
    /* 0x5B8/1464 */ unsigned long field_5B8;
    /* 0x5BC/1468 */ unsigned long field_5BC;
    /* 0x5C0/1472 */ unsigned long field_5C0;
    /* 0x5C4/1476 */ unsigned long field_5C4;
    /* 0x5C8/1480 */ unsigned long field_5C8;
    /* 0x5CC/1484 */ unsigned long field_5CC;
    /* 0x5D0/1488 */ unsigned long field_5D0;
    /* 0x5D4/1492 */ unsigned long field_5D4;
    /* 0x5D8/1496 */ unsigned long field_5D8;
    /* 0x5DC/1500 */ unsigned long field_5DC;
    /* 0x5E0/1504 */ unsigned long field_5E0;
    /* 0x5E4/1508 */ unsigned long field_5E4;
    /* 0x5E8/1512 */ unsigned long field_5E8;
    /* 0x5EC/1516 */ unsigned long field_5EC;
    /* 0x5F0/1520 */ unsigned long field_5F0;
    /* 0x5F4/1524 */ unsigned long field_5F4;
    /* 0x5F8/1528 */ unsigned long field_5F8;
    /* 0x5FC/1532 */ unsigned long field_5FC;
    /* 0x600/1536 */ unsigned long field_600;
    /* 0x604/1540 */ unsigned long field_604;
    /* 0x608/1544 */ unsigned long field_608;
    /* 0x60C/1548 */ unsigned long field_60C;
    /* 0x610/1552 */ unsigned long field_610;
    /* 0x614/1556 */ unsigned long field_614;
    /* 0x618/1560 */ unsigned long field_618;
    /* 0x61C/1564 */ unsigned long field_61C;
    /* 0x620/1568 */ unsigned long field_620;
    /* 0x624/1572 */ unsigned long field_624;
    /* 0x628/1576 */ unsigned long field_628;
    /* 0x62C/1580 */ unsigned long field_62C;
    /* 0x630/1584 */ unsigned long field_630;
    /* 0x634/1588 */ unsigned long field_634;
    /* 0x638/1592 */ unsigned long field_638;
    /* 0x63C/1596 */ unsigned long field_63C;
    /* 0x640/1600 */ unsigned long field_640;
    /* 0x644/1604 */ unsigned long field_644;
    /* 0x648/1608 */ unsigned long field_648;
    /* 0x64C/1612 */ unsigned long field_64C;
    /* 0x650/1616 */ unsigned long field_650;
    /* 0x654/1620 */ unsigned long field_654;
    /* 0x658/1624 */ unsigned long field_658;
    /* 0x65C/1628 */ unsigned long field_65C;
    /* 0x660/1632 */ unsigned long field_660;
    /* 0x664/1636 */ unsigned long field_664;
    /* 0x668/1640 */ unsigned long field_668;
    /* 0x66C/1644 */ unsigned long field_66C;
    /* 0x670/1648 */ unsigned long field_670;
    /* 0x674/1652 */ unsigned long field_674;
    /* 0x678/1656 */ unsigned long field_678;
    /* 0x67C/1660 */ unsigned long field_67C;
    /* 0x680/1664 */ unsigned long field_680;
    /* 0x684/1668 */ unsigned long field_684;
    /* 0x688/1672 */ unsigned long field_688;
    /* 0x68C/1676 */ unsigned long field_68C;
    /* 0x690/1680 */ unsigned long field_690;
    /* 0x694/1684 */ unsigned long field_694;
    /* 0x698/1688 */ unsigned long field_698;
    /* 0x69C/1692 */ unsigned long field_69C;
    /* 0x6A0/1696 */ unsigned long field_6A0;
    /* 0x6A4/1700 */ unsigned long field_6A4;
    /* 0x6A8/1704 */ unsigned long field_6A8;
    /* 0x6AC/1708 */ unsigned long field_6AC;
    /* 0x6B0/1712 */ unsigned long field_6B0;
    /* 0x6B4/1716 */ unsigned long field_6B4;
    /* 0x6B8/1720 */ unsigned long field_6B8;
    /* 0x6BC/1724 */ unsigned long field_6BC;
    /* 0x6C0/1728 */ unsigned long field_6C0;
    /* 0x6C4/1732 */ unsigned long field_6C4;
    /* 0x6C8/1736 */ unsigned long field_6C8;
    /* 0x6CC/1740 */ unsigned long field_6CC;
    /* 0x6D0/1744 */ unsigned long field_6D0;
    /* 0x6D4/1748 */ unsigned long field_6D4;
    /* 0x6D8/1752 */ unsigned long field_6D8;
    /* 0x6DC/1756 */ unsigned long field_6DC;
    /* 0x6E0/1760 */ unsigned long field_6E0;
    /* 0x6E4/1764 */ unsigned long field_6E4;
    /* 0x6E8/1768 */ unsigned long field_6E8;
    /* 0x6EC/1772 */ unsigned long field_6EC;
    /* 0x6F0/1776 */ unsigned long field_6F0;
    /* 0x6F4/1780 */ unsigned long field_6F4;
    /* 0x6F8/1784 */ unsigned long field_6F8;
    /* 0x6FC/1788 */ unsigned long field_6FC;
    /* 0x700/1792 */ unsigned long field_700;
    /* 0x704/1796 */ unsigned long field_704;
    /* 0x708/1800 */ unsigned long field_708;
    /* 0x70C/1804 */ unsigned long field_70C;
    /* 0x710/1808 */ unsigned long field_710;
    /* 0x714/1812 */ unsigned long field_714;
    /* 0x718/1816 */ unsigned long field_718;
    /* 0x71C/1820 */ unsigned long field_71C;
    /* 0x720/1824 */ unsigned long field_720;
    /* 0x724/1828 */ unsigned long field_724;
    /* 0x728/1832 */ unsigned long field_728;
    /* 0x72C/1836 */ unsigned long field_72C;
    /* 0x730/1840 */ unsigned long field_730;
    /* 0x734/1844 */ unsigned long field_734;
    /* 0x738/1848 */ unsigned long field_738;
    /* 0x73C/1852 */ unsigned long field_73C;
    /* 0x740/1856 */ unsigned long field_740;
    /* 0x744/1860 */ unsigned long field_744;
    /* 0x748/1864 */ unsigned long field_748;
    /* 0x74C/1868 */ unsigned long field_74C;
    /* 0x750/1872 */ unsigned long field_750;
    /* 0x754/1876 */ unsigned long field_754;
    /* 0x758/1880 */ unsigned long field_758;
    /* 0x75C/1884 */ unsigned long field_75C;
    /* 0x760/1888 */ unsigned long field_760;
    /* 0x764/1892 */ unsigned long field_764;
    /* 0x768/1896 */ unsigned long field_768;
    /* 0x76C/1900 */ unsigned long field_76C;
    /* 0x770/1904 */ unsigned long field_770;
    /* 0x774/1908 */ unsigned long field_774;
    /* 0x778/1912 */ unsigned long field_778;
    /* 0x77C/1916 */ unsigned long field_77C;
    /* 0x780/1920 */ unsigned long field_780;
    /* 0x784/1924 */ unsigned long field_784;
    /* 0x788/1928 */ unsigned long field_788;
    /* 0x78C/1932 */ unsigned long field_78C;
    /* 0x790/1936 */ unsigned long field_790;
    /* 0x794/1940 */ unsigned long field_794;
    /* 0x798/1944 */ unsigned long field_798;
    /* 0x79C/1948 */ unsigned long field_79C;
    /* 0x7A0/1952 */ unsigned long field_7A0;
    /* 0x7A4/1956 */ unsigned long field_7A4;
    /* 0x7A8/1960 */ unsigned long field_7A8;
    /* 0x7AC/1964 */ unsigned long field_7AC;
    /* 0x7B0/1968 */ unsigned long field_7B0;
    /* 0x7B4/1972 */ unsigned long field_7B4;
    /* 0x7B8/1976 */ unsigned long field_7B8;
    /* 0x7BC/1980 */ unsigned long field_7BC;
    /* 0x7C0/1984 */ unsigned long field_7C0;
    /* 0x7C4/1988 */ unsigned long field_7C4;
    /* 0x7C8/1992 */ unsigned long field_7C8;
    /* 0x7CC/1996 */ unsigned long field_7CC;
    /* 0x7D0/2000 */ unsigned long field_7D0;
    /* 0x7D4/2004 */ unsigned long field_7D4;
    /* 0x7D8/2008 */ unsigned long field_7D8;
    /* 0x7DC/2012 */ unsigned long field_7DC;
    /* 0x7E0/2016 */ unsigned long field_7E0;
    /* 0x7E4/2020 */ unsigned long field_7E4;
    /* 0x7E8/2024 */ unsigned long field_7E8;
    /* 0x7EC/2028 */ unsigned long field_7EC;
    /* 0x7F0/2032 */ unsigned long field_7F0;
    /* 0x7F4/2036 */ unsigned long field_7F4;
    /* 0x7F8/2040 */ unsigned long field_7F8;
    /* 0x7FC/2044 */ unsigned long field_7FC;
    /* 0x800/2048 */ unsigned long field_800;
    /* 0x804/2052 */ unsigned long field_804;
    /* 0x808/2056 */ unsigned long field_808;
    /* 0x80C/2060 */ unsigned long field_80C;
    /* 0x810/2064 */ unsigned long field_810;
    /* 0x814/2068 */ unsigned long field_814;
    /* 0x818/2072 */ unsigned long field_818;
    /* 0x81C/2076 */ unsigned long field_81C;
    /* 0x820/2080 */ unsigned long field_820;
    /* 0x824/2084 */ unsigned long field_824;
    /* 0x828/2088 */ unsigned long field_828;
    /* 0x82C/2092 */ unsigned long field_82C;
    /* 0x830/2096 */ unsigned long field_830;
    /* 0x834/2100 */ unsigned long field_834;
    /* 0x838/2104 */ unsigned long field_838;
    /* 0x83C/2108 */ unsigned long field_83C;
    /* 0x840/2112 */ unsigned long field_840;
    /* 0x844/2116 */ unsigned long field_844;
    /* 0x848/2120 */ unsigned long field_848;
    /* 0x84C/2124 */ unsigned long field_84C;
    /* 0x850/2128 */ unsigned long field_850;
    /* 0x854/2132 */ unsigned long field_854;
    /* 0x858/2136 */ unsigned long field_858;
    /* 0x85C/2140 */ unsigned long field_85C;
    /* 0x860/2144 */ unsigned long field_860;
    /* 0x864/2148 */ unsigned long field_864;
    /* 0x868/2152 */ unsigned long field_868;
    /* 0x86C/2156 */ unsigned long field_86C;
    /* 0x870/2160 */ unsigned long field_870;
    /* 0x874/2164 */ unsigned long field_874;
    /* 0x878/2168 */ unsigned long field_878;
    /* 0x87C/2172 */ unsigned long field_87C;
    /* 0x880/2176 */ unsigned long field_880;
    /* 0x884/2180 */ unsigned long field_884;
    /* 0x888/2184 */ unsigned long field_888;
    /* 0x88C/2188 */ unsigned long field_88C;
    /* 0x890/2192 */ unsigned long field_890;
    /* 0x894/2196 */ unsigned long field_894;
    /* 0x898/2200 */ unsigned long field_898;
    /* 0x89C/2204 */ unsigned long field_89C;
    /* 0x8A0/2208 */ unsigned long field_8A0;
    /* 0x8A4/2212 */ unsigned long field_8A4;
    /* 0x8A8/2216 */ unsigned long field_8A8;
    /* 0x8AC/2220 */ unsigned long field_8AC;
    /* 0x8B0/2224 */ unsigned long field_8B0;
    /* 0x8B4/2228 */ unsigned long field_8B4;
    /* 0x8B8/2232 */ unsigned long field_8B8;
    /* 0x8BC/2236 */ unsigned long field_8BC;
    /* 0x8C0/2240 */ unsigned long field_8C0;
    /* 0x8C4/2244 */ unsigned long field_8C4;
    /* 0x8C8/2248 */ unsigned long field_8C8;
    /* 0x8CC/2252 */ unsigned long field_8CC;
    /* 0x8D0/2256 */ unsigned long field_8D0;
    /* 0x8D4/2260 */ unsigned long field_8D4;
    /* 0x8D8/2264 */ unsigned long field_8D8;
    /* 0x8DC/2268 */ unsigned long field_8DC;
    /* 0x8E0/2272 */ unsigned long field_8E0;
    /* 0x8E4/2276 */ unsigned long field_8E4;
    /* 0x8E8/2280 */ unsigned long field_8E8;
    /* 0x8EC/2284 */ unsigned long field_8EC;
    /* 0x8F0/2288 */ unsigned long field_8F0;
    /* 0x8F4/2292 */ unsigned long field_8F4;
    /* 0x8F8/2296 */ unsigned long field_8F8;
    /* 0x8FC/2300 */ unsigned long field_8FC;
    /* 0x900/2304 */ unsigned long field_900;
    /* 0x904/2308 */ unsigned long field_904;
    /* 0x908/2312 */ unsigned long field_908;
    /* 0x90C/2316 */ unsigned long field_90C;
    /* 0x910/2320 */ unsigned long field_910;
    /* 0x914/2324 */ unsigned long field_914;
    /* 0x918/2328 */ unsigned long field_918;
    /* 0x91C/2332 */ unsigned long field_91C;
    /* 0x920/2336 */ unsigned long field_920;
    /* 0x924/2340 */ unsigned long field_924;
    /* 0x928/2344 */ unsigned long field_928;
    /* 0x92C/2348 */ unsigned long field_92C;
    /* 0x930/2352 */ unsigned long field_930;
    /* 0x934/2356 */ unsigned long field_934;
    /* 0x938/2360 */ unsigned long field_938;
    /* 0x93C/2364 */ unsigned long field_93C;
    /* 0x940/2368 */ unsigned long field_940;
    /* 0x944/2372 */ unsigned long field_944;
    /* 0x948/2376 */ unsigned long field_948;
    /* 0x94C/2380 */ unsigned long field_94C;
    /* 0x950/2384 */ unsigned long field_950;
    /* 0x954/2388 */ unsigned long field_954;
    /* 0x958/2392 */ unsigned long field_958;
    /* 0x95C/2396 */ unsigned long field_95C;
    /* 0x960/2400 */ unsigned long field_960;
    /* 0x964/2404 */ unsigned long field_964;
    /* 0x968/2408 */ unsigned long field_968;
    /* 0x96C/2412 */ unsigned long field_96C;
    /* 0x970/2416 */ unsigned long field_970;
    /* 0x974/2420 */ unsigned long field_974;
    /* 0x978/2424 */ unsigned long field_978;
    /* 0x97C/2428 */ unsigned long field_97C;
    /* 0x980/2432 */ unsigned long field_980;
    /* 0x984/2436 */ unsigned long field_984;
    /* 0x988/2440 */ unsigned long field_988;
    /* 0x98C/2444 */ unsigned long field_98C;
    /* 0x990/2448 */ unsigned long field_990;
    /* 0x994/2452 */ unsigned long field_994;
    /* 0x998/2456 */ unsigned long field_998;
    /* 0x99C/2460 */ unsigned long field_99C;
    /* 0x9A0/2464 */ unsigned long field_9A0;
    /* 0x9A4/2468 */ unsigned long field_9A4;
    /* 0x9A8/2472 */ unsigned long field_9A8;
    /* 0x9AC/2476 */ unsigned long field_9AC;
    /* 0x9B0/2480 */ unsigned long field_9B0;
    /* 0x9B4/2484 */ unsigned long field_9B4;
    /* 0x9B8/2488 */ unsigned long field_9B8;
    /* 0x9BC/2492 */ unsigned long field_9BC;
    /* 0x9C0/2496 */ unsigned long field_9C0;
    /* 0x9C4/2500 */ unsigned long field_9C4;
    /* 0x9C8/2504 */ unsigned long field_9C8;
    /* 0x9CC/2508 */ unsigned long Silent;
    /* 0x9D0/2512 */ unsigned long Hasted;
    /* 0x9D4/2516 */ unsigned long Slowed;
    /* 0x9D8/2520 */ unsigned long Taunted;
    /* 0x9DC/2524 */ unsigned long ForcedWalk;
    /* 0x9E0/2528 */ unsigned char VisionType;
    /* 0x9E1/2529 */ unsigned char State;
    /* 0x9E2/2530 */ unsigned char field_9E2;
    /* 0x9E3/2531 */ unsigned char field_9E3;
    /* 0x9E4/2532 */ unsigned long EffectSpellId;
    /* 0x9E8/2536 */ unsigned long EffectIcons;
    /* 0x9EC/2540 */ unsigned long field_9EC;
    /* 0x9F0/2544 */ unsigned long field_9F0;
    /* 0x9F4/2548 */ unsigned long CutsceneCameraMode;
    /* 0x9F8/2552 */ float CutsceneCameraMovementRateFactor;
    /* 0x9FC/2556 */ unsigned long field_9FC;
    /* 0xA00/2560 */ unsigned long CutsceneGhost;
    /* 0xA04/2564 */ unsigned long LastPerceived;
    /* 0xA08/2568 */ unsigned long LastPerceptionHeard;
    /* 0xA0C/2572 */ unsigned long LastPerceptionSeen;
    /* 0xA10/2576 */ unsigned long LastPerceptionInaudible;
    /* 0xA14/2580 */ unsigned long LastPerceptionVanished;
    /* 0xA18/2584 */ float SpotCheckDistance;
    /* 0xA20/2592 */ float SpotCheckMaxDistance;
    /* 0xA20/2592 */ float ListenCheckDistance;
    /* 0xA24/2596 */ float ListenCheckMaxDistance;
    /* 0xA28/2600 */ float BlindsightDistance;
    /* 0xA2C/2604 */ unsigned char LastHideRoll;
    /* 0xA2D/2605 */ unsigned char LastMoveSilentlyRoll;
    /* 0xA2E/2606 */ unsigned char LastSpotRoll;
    /* 0xA2F/2607 */ unsigned char LastListenRoll;
    /* 0xA30/2608 */ CExoArrayList<CNWVisibilityNode *> VisibilityList;
    /* 0xA3C/2620 */ unsigned long InvitedToPartyBy;
    /* 0xA40/2624 */ unsigned long InvitedToParty;
    /* 0xA44/2628 */ unsigned long InvitedDay;
    /* 0xA48/2632 */ unsigned long InvitedTime;
    /* 0xA4C/2636 */ CExoArrayList<CNWSInvitationDetails>* InvitationsOffered;
    /* 0xA50/2640 */ CExoArrayList<CNWSInvitationDetails>* InvitationsIgnored;
    /* 0xA54/2644 */ unsigned long LockOrientationToObject;
    /* 0xA58/2648 */ unsigned long LastCounterSpellID;
    /* 0xA5C/2652 */ unsigned char LastCounterSpellClass;
    /* 0xA5D/2653 */ unsigned char LastCounterMetaType;
    /* 0xA5E/2654 */ unsigned char LastCounterDomainLevel;
    /* 0xA5F/2655 */ unsigned char field_A5F;
    /* 0xA60/2656 */ CExoArrayList<unsigned long> SpellIdentifiedList;
    /* 0xA6C/2668 */ unsigned long LastSpellCastItem;
    /* 0xA70/2672 */ unsigned long LastSpellUnReadied;
    /* 0xA74/2692 */ unsigned long ItemSpell;
    /* 0xA78/2692 */ unsigned long ItemSpellLevel;
    /* 0xA7C/2684 */ unsigned long ItemCastSpellBroadcastAOO;
    /* 0xA80/2688 */ nwobjid SittingObject;
    /* 0xA84/2692 */ unsigned long StealAnimationPlayed;
    /* 0xA88/2696 */ unsigned long Spotted;
    /* 0xA8C/2700 */ unsigned long HealAnimationPlayed;
    /* 0xA90/2704 */ unsigned long TrapAnimationPlayed;
    /* 0xA94/2708 */ unsigned long UnlockAnimationPlayed;
    /* 0xA98/2712 */ unsigned long LockAnimationPlayed;
    /* 0xA9C/2716 */ unsigned long DropItemAnimationPlayed;
    /* 0xAA0/2720 */ unsigned long PickUpItemAnimationPlayed;
    /* 0xAA4/2724 */ unsigned long TauntAnimationPlayed;
    /* 0xAA8/2728 */ unsigned long field_AA8;
    /* 0xAAC/2732 */ unsigned long field_AAC;
    /* 0xAB0/2736 */ unsigned long field_AB0;
    /* 0xAB4/2740 */ unsigned long field_AB4;
    /* 0xAB8/2744 */ unsigned long FacingAndAnimationDone;
    /* 0xABC/2748 */ unsigned long MagicalArrowsEquipped;
    /* 0xAC0/2752 */ unsigned long MagicalBoltsEquipped;
    /* 0xAC4/2756 */ unsigned long MagicalBulletsEquipped;
    /* 0xAC8/2760 */ unsigned long field_AC8;
    /* 0xACC/2764 */ CNWSCombatRound *CombatRound;
    /* 0xAD0/2768 */ unsigned long field_AD0;
    /* 0xAD4/2772 */ void *Barter;
    /* 0xAD8/2776 */ unsigned long Gold;
    /* 0xADC/2780 */ unsigned long IsPC;
    /* 0xAE0/2784 */ unsigned short SoundSetFile;
    /* 0xAE2/2786 */ unsigned short field_AE2;
    /* 0xAE4/2788 */ unsigned long FootstepType;
    /* 0xAE8/2792 */ unsigned long BodyBag;
    /* 0xAEC/2796 */ unsigned long IsInTransit;
    /* 0xAF0/2800 */ unsigned long IsPoisoned;
    /* 0xAF4/2804 */ unsigned long IsDiseased;
    /* 0xAF8/2808 */ unsigned long IsImmortal;
    /* 0xAFC/2812 */ unsigned long NoPermDeath;
    /* 0xB00/2816 */ CExoString NameOverride;
    /* 0xB08/2824 */ unsigned long UpdateDisplayName;
    /* 0xB0C/2828 */ unsigned short AIState;
    /* 0xB0E/2830 */ char AIStateAction;
    /* 0xB10/2832 */ char rsvd14;
    /* 0xB10/2832 */ nwobjid AIStateActee;
    /* 0xB14/2836 */ unsigned long field_B14;
    /* 0xB18/2840 */ unsigned short AIStateActivities;
    /* 0xB1A/2842 */ unsigned short field_B1A;
    /* 0xB1C/2844 */ unsigned long Activity;
    /* 0xB20/2848 */ float MovementRate;
    /* 0xB24/2852 */ float DriveModeMoveFactor;
    /* 0xB28/2856 */ unsigned char WalkAnimation;
    /* 0xB29/2857 */ unsigned char field_B29;
    /* 0xB2A/2858 */ unsigned char field_B2A;
    /* 0xB2B/2859 */ unsigned char field_B2B;
    /* 0xB2C/2860 */ unsigned long DriveMode;
    /* 0xB30/2864 */ unsigned long JumpedRecently;
    /* 0xB34/2868 */ unsigned long MasterID;
    /* (ptr_to:CExoArrayList<int>) */
    /* 0xB38/2872 */ CExoArrayList<unsigned long> *Associates;
    /* 0xB3C/2876 */ unsigned short AssociateType;
    /* 0xB3E/2878 */ unsigned short field_B3E;
    /* 0xB40/2880 */ unsigned long LastAssociateCommand;
    /* 0xB44/2884 */ unsigned long SummonedAnimalCompanion;
    /* 0xB48/2888 */ unsigned long SummonedFamiliar;
    /* 0xB4C/2892 */ unsigned long field_B4C;
    /* 0xB50/2896 */ unsigned long field_B50;
    /* 0xB54/2900 */ unsigned long field_B54;
    /* 0xB58/2904 */ unsigned long field_B58;
    /* 0xB5C/2908 */ void *ReputationInformation;
    /* (ptr_to:CExoArrayList<int>) */
    /* 0xB60/2912 */ CExoArrayList<int> *m_pReputation;
    /* 0xB64/2916 */ CExoArrayList<CNWSPVPEntry> *PVP;
    /* 0xB68/2920 */ nwobjid EncounterId;
    /* 0xB6C/2924 */ unsigned long AlreadyRemovedFromEncounter;
    /* 0xB70/2928 */ CNWSInventory* Inventory;
    /* 0xB74/2932 */ CItemRepository *ItemRepository;
    /* 0xB78/2936 */ unsigned short RepositoryArrayIndex;
    /* 0xB7A/2938 */ unsigned short ItemContainerArrayIndex;
    /* 0xB7C/2940 */ unsigned long CurrentItemContainer;
    /* 0xB80/2944 */ unsigned long EquippedWeight;
    /* 0xB84/2948 */ unsigned long NPCWeight;
    /* 0xB88/2952 */ unsigned long EncumbranceState;
    /* 0xB8C/2956 */ unsigned long LastPickupFailed;
    /* 0xB90/2960 */ unsigned long TotalWeight;
    /* 0xB94/2964 */ unsigned long PolymorphItemID[18];
    /* 0xBDC/3036 */ CResRef PolymorphPortrait;
    /* 0xBEC/3052 */ unsigned short PolymorphPortraitID;
    /* 0xBEE/3054 */ unsigned short field_BEE;
    /* 0xBF0/3056 */ unsigned long IsPolymorphed;
    /* 0xBF4/3060 */ unsigned short PolymorphAppearance;
    /* 0xBF6/3062 */ unsigned char PrePolymorphSTR;
    /* 0xBF7/3063 */ unsigned char PrePolymorphCON;
    /* 0xBF8/3064 */ unsigned char PrePolymorphDEX;
    /* 0xBF9/3065 */ unsigned char field_BF9;
    /* 0xBFA/3066 */ unsigned char PolymorphRace;
    /* 0xBFB/3067 */ unsigned char field_BFB;
    /* 0xBFC/3068 */ unsigned long PrePolymorhpHP;
    /* 0xC00/3072 */ unsigned long PolymorphSpell1;
    /* 0xC04/3076 */ unsigned long PolymorphSpell2;
    /* 0xC08/3080 */ unsigned long PolymorphSpell3;
    /* 0xC0C/3084 */ unsigned long long PolymorphACBonus;
    /* 0xC14/3092 */ unsigned long long PolymorphHPBonus;
    /* 0xC1C/3100 */ unsigned long field_C1C;
    /* 0xC20/3104 */ unsigned long IsPolymorphing;
    /* 0xC24/3108 */ unsigned long PolymorphLocked;
    /* 0xC28/3112 */ CNWSCreatureAppearanceInfo CreatureAppearanceInfo;
    /* 0xC68/3176 */ CNWSCreatureStats *CreatureStats;
    /* 0xC6C/3180 */ unsigned long field_C6C;
    /* 0xC70/3184 */ unsigned long field_C70;
};

static_assert_size(CNWSCreature, 0xc74);

#endif
